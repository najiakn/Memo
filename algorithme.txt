--------------------------------------------------------------Algorithme-------------------------------------------------------



-----------------------------------------------------------------------Algorithme pour les directives preprocesseur
1)----algorithme pour la directive taille 
Debut
  #define taille <-100
Fin




----------------------------------------------------------------------les structures:

1)------------------
       algorithme pour la structure Date_echeance
Debut
 structure date_echeance
     jour : entier
     mois :entier
     annee:entier
 fin structure
Fin


2)------------------
    
     algorithme pour la structure Taches

Debut
structure taches
     Nom:chaine des caracteres avec la taille 'taille'
     description : chaine des caracteres avec la taille 'taille
     date_eche : date_echeance
     priorite:chaine des caracteres avec la taille 'taille'
fin structure 
Fin


---------------------------------------------------------Algorithme pour les fonctions

1)------------algorithme pour la fonction ajouter
void  ajouter(tache[],nombre_tache){

Ecrire("remplir la tache")

Ecrire("entrer la valeur de nom")
lire(tache[tache_nombre].nom)


Ecrire("entrer la valeur de description")
Lire(tache[tache_nombre].description)


Ecrire("entrer la valeur de la date_echeance")

Ecrire("entrer le jour")
lire(tache[tache_nombre].date.jour)

Ecrire("entrer le mois")
lire(tache[tache_nombre].date.mois)

Ecrire("entrer l'annee")
Lire(tache[tache_nombre].date.annee)

Ecrire("entrer la  valeur de priorite")
Lire(tache[tache_nombre].priorite")

tache_nombre <-tache_nombre+1
Fin

2)----------------------Algorithme pour la fonction afficher

void afficher(tache[],nombre_tache)
{
i:entier2
i<-0
tant que (i<nombre_tache)

 Debut

ecrire("tache  %d",i)
ecrire ("nom %s",tache[i].nom)
ecrire("description %s",tache[i].decription)
ecrire("date_echeance %d/%d/%d",tache[i].date.jour,tache[i].date.mois,tache[i].date.anne)
ecrire("priorite %s",tache[i].priorite)

  Fin

3)------------------------------Algorithme pour la fonction modifier
void supprimer(tache[],nombre_tache){
//affichage des lignes
i:entier;
i<-0;
tant que(i<nombre_tache)
printf("tache %d |Nom : %s |Description :%s | Date :%d/%d/%d | priorite :%s",i+1,tache[i].nom,tache[i].description,tache[i].date.jour,tache[i].date.mois,tache[i].date.annee,tache[i].prioerite);
i++;

//choisir une ligne
choix_ligne:entier
Ecrire("entrer un indice \n")
Lire(choix_ligne);

indice : entier
indice <-choix_ligne -1
tant que (choix_ligne>=1 && choix_ligne<=nombre_tache){
Ecrire("les champs disponibles ")
Ecrire("1:nom")
Ecrire("2:Description")
Ecrire("3:Date")
Ecrire("priorite")


//choisir un indice 
choix_champ:entier;
Ecrire("entrer le numero d'un champ");
lire(n)
switch(choix_champ)
{
case 1:
ecrire("tapez le nom");
lire(tache[indice].nom)
break;

case 2:
ecrire("tapez la description ");
lire(tache[indice].description);
break

case 3:
ecrire("tapez la date ");
ecrire("tapez le jour ");
lire(tache[indice].date.jour);

ecrire("tapez le mois")
lire(tache[indice].date.mois)

ecrire("tapez l'annee")
lire(tache[indice].date.annee)
break;

case 4 :
Ecrire("entrer la priorite")
lire(tache[indice].priorite)

default :
ecrire("option non valide");
return;
}
Ecrire("supprimer avec succe");
}
else {
Ecrire("choix non valide ");
}
}
}
