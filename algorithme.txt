--------------------------------------------------------------Algorithme-------------------------------------------------------



-----------------------------------------------------------------------Algorithme pour les directives preprocesseur
1)----algorithme pour la directive taille 
Debut
  #define taille <-100
Fin




----------------------------------------------------------------------les structures:

1)------------------
       algorithme pour la structure Date_echeance
Debut
 structure date_echeance
     jour : entier
     mois :entier
     annee:entier
 fin structure
Fin


2)------------------
    
     algorithme pour la structure Taches

Debut
structure taches
     Nom:chaine des caracteres avec la taille 'taille'
     description : chaine des caracteres avec la taille 'taille
     date_eche : date_echeance
     priorite:chaine des caracteres avec la taille 'taille'
fin structure 
Fin


---------------------------------------------------------Algorithme pour les fonctions

1)------------algorithme pour la fonction ajouter
void  ajouter(tache[],nombre_tache){

Ecrire("remplir la tache")

Ecrire("entrer la valeur de nom")
lire(tache[tache_nombre].nom)


Ecrire("entrer la valeur de description")
Lire(tache[tache_nombre].description)


Ecrire("entrer la valeur de la date_echeance")

Ecrire("entrer le jour")
lire(tache[tache_nombre].date.jour)

Ecrire("entrer le mois")
lire(tache[tache_nombre].date.mois)

Ecrire("entrer l'annee")
Lire(tache[tache_nombre].date.annee)

Ecrire("entrer la  valeur de priorite")
Lire(tache[tache_nombre].priorite")

tache_nombre <-tache_nombre+1
Fin

2)----------------------Algorithme pour la fonction afficher

void afficher(tache[],nombre_tache)
{
i:entier2
i<-0
tant que (i<nombre_tache)

 Debut

ecrire("tache  %d",i)
ecrire ("nom %s",tache[i].nom)
ecrire("description %s",tache[i].decription)
ecrire("date_echeance %d/%d/%d",tache[i].date.jour,tache[i].date.mois,tache[i].date.anne)
ecrire("priorite %s",tache[i].priorite)

  Fin


